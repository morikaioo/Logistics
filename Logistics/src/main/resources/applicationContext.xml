<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-4.0.xsd">
            
      
      <!-- spring的配置文件，这里主要配置和业务逻辑有关的 --> 
      <!-- ======================数据源，事务控制，等等。。==================================== -->
      <context:property-placeholder location="classpath:dbconfig.properties" />
         
<!--       <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> -->
      <bean id="pooledDataSource" class="com.alibaba.druid.pool.DruidDataSource">
      		<property name="url" value="${jdbc.jdbcUrl}"></property>
      		<property name="driverClassName" value="${jdbc.driverClass}"></property>
      		<property name="username" value="${jdbc.user}"></property>
      		<property name="password" value="${jdbc.password}"></property>
      </bean>
      <!-- 配置数据源 -->
	<!-- <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
      	<property name="driverClass" value="${jdbc.driverClass}"></property>
      	<property name="user" value="${jdbc.user}"></property>
      	<property name="password" value="${jdbc.password}"></property>
	</bean> -->
       <context:component-scan base-package="wxl.logistic.serviceImpl" />
      
      
      <!-- ==========================配置和Mybatis的整合================================= -->
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      		<!-- 指定没有batis全局配置文件的位置 -->
      		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
      		<property name="dataSource" ref="pooledDataSource"></property>
      		<!-- 指定myBatis,mapper文件配置 -->
      		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
      </bean>
      
      <!-- 配置扫描器,将myBatis接口的实现加入到ioc接口的实现中 -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      		<!-- 扫描所有dao接口的实现，加入到ioc容器中 -->
      		<property name="basePackage" value="wxl.logistic.dao" ></property>
      </bean>
</beans>